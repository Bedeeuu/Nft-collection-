const http = require('http');
const https = require('https');
const fs = require('fs');
const path = require('path');

// –°–µ—Ä–≤–µ—Ä–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
let currentServerImagePath = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞
function loadEnvVariables() {
    try {
        const envPath = path.join(__dirname, '.env');
        if (fs.existsSync(envPath)) {
            const envFile = fs.readFileSync(envPath, 'utf8');
            envFile.split('\n').forEach(line => {
                const [key, value] = line.split('=');
                if (key && value && !key.startsWith('#')) {
                    process.env[key.trim()] = value.trim();
                }
            });
            console.log('‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ .env —Ñ–∞–π–ª–∞');
        } else {
            console.log('‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
        }
    } catch (error) {
        console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:', error.message);
    }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
loadEnvVariables();

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è OpenAI API
const OPENAI_CONFIG = {
    apiKey: process.env.OPENAI_API_KEY || 'your-openai-api-key-here', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API –∫–ª—é—á
    model: 'gpt-4-vision-preview',
    maxTokens: 500
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é OpenAI GPT-4 Vision
async function analyzeImageWithGPT(imagePath) {
    try {
        console.log('ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ OpenAI GPT-4 Vision...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        const fullImagePath = path.join(__dirname, imagePath);
        if (!fs.existsSync(fullImagePath)) {
            throw new Error(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: ${imagePath}`);
        }
        
        // –ß–∏—Ç–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
        const imageBuffer = fs.readFileSync(fullImagePath);
        const base64Image = imageBuffer.toString('base64');
        const imageExtension = path.extname(imagePath).toLowerCase();
        const mimeType = imageExtension === '.png' ? 'image/png' : 'image/jpeg';
        
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ OpenAI
        const requestData = {
            model: OPENAI_CONFIG.model,
            messages: [
                {
                    role: "user",
                    content: [
                        {
                            type: "text",
                            text: `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è NFT –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö. –°–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∫–ª—é—á–∞—é—â–µ–µ:

1. –ù–ê–ó–í–ê–ù–ò–ï NFT (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ)
2. –û–ü–ò–°–ê–ù–ò–ï (–ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ)
3. –°–¢–ò–õ–¨ (—Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å –∏ —Ç–µ—Ö–Ω–∏–∫–∞)
4. –¶–í–ï–¢–û–í–ê–Ø –ü–ê–õ–ò–¢–†–ê (–æ—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞ –∏ –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏)
5. –ù–ê–°–¢–†–û–ï–ù–ò–ï (—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞)
6. –ê–¢–†–ò–ë–£–¢–´ (—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö)

–û—Ç–≤–µ—Ç –¥–∞–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
{
  "name": "–ù–∞–∑–≤–∞–Ω–∏–µ NFT",
  "description": "–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
  "style": "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å",
  "colors": "–¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞",
  "mood": "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ",
  "attributes": ["–∞—Ç—Ä–∏–±—É—Ç1", "–∞—Ç—Ä–∏–±—É—Ç2", "–∞—Ç—Ä–∏–±—É—Ç3"]
}`
                        },
                        {
                            type: "image_url",
                            image_url: {
                                url: `data:${mimeType};base64,${base64Image}`
                            }
                        }
                    ]
                }
            ],
            max_tokens: OPENAI_CONFIG.maxTokens
        };
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenAI API
        const response = await makeOpenAIRequest(requestData);
        
        if (response && response.choices && response.choices[0]) {
            const content = response.choices[0].message.content;
            console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç OpenAI:', content.substring(0, 100) + '...');
            
            try {
                // –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç
                const analysisResult = JSON.parse(content);
                return {
                    success: true,
                    data: analysisResult,
                    source: 'OpenAI GPT-4 Vision'
                };
            } catch (parseError) {
                console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç');
                return {
                    success: true,
                    data: {
                        name: `AI Generated NFT #${Date.now()}`,
                        description: content,
                        style: 'AI Analysis',
                        colors: '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –ò–ò',
                        mood: '–ê–Ω–∞–ª–∏–∑ GPT-4',
                        attributes: ['AI Generated', 'GPT-4 Vision', 'Unique']
                    },
                    source: 'OpenAI GPT-4 Vision (—Ç–µ–∫—Å—Ç)'
                };
            }
        } else {
            throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç OpenAI API');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å OpenAI:', error.message);
        return {
            success: false,
            error: error.message,
            fallback: true
        };
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–∞ –∫ OpenAI API
function makeOpenAIRequest(data) {
    return new Promise((resolve, reject) => {
        const postData = JSON.stringify(data);
        
        const options = {
            hostname: 'api.openai.com',
            port: 443,
            path: '/v1/chat/completions',
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${OPENAI_CONFIG.apiKey}`,
                'Content-Length': Buffer.byteLength(postData)
            }
        };
        
        const req = https.request(options, (res) => {
            let responseData = '';
            
            res.on('data', (chunk) => {
                responseData += chunk;
            });
            
            res.on('end', () => {
                try {
                    const jsonResponse = JSON.parse(responseData);
                    if (res.statusCode === 200) {
                        resolve(jsonResponse);
                    } else {
                        reject(new Error(`OpenAI API Error: ${jsonResponse.error?.message || 'Unknown error'}`));
                    }
                } catch (parseError) {
                    reject(new Error(`JSON Parse Error: ${parseError.message}`));
                }
            });
        });
        
        req.on('error', (error) => {
            reject(new Error(`Request Error: ${error.message}`));
        });
        
        req.write(postData);
        req.end();
    });
}

const server = http.createServer((req, res) => {
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
    
    if (req.method === 'OPTIONS') {
        res.writeHead(200);
        res.end();
        return;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)
    if (req.method === 'GET' && req.url.startsWith('/images/')) {
        const imagePath = path.join(__dirname, req.url);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if (fs.existsSync(imagePath)) {
            const ext = path.extname(imagePath).toLowerCase();
            let contentType = 'image/jpeg';
            
            if (ext === '.png') contentType = 'image/png';
            else if (ext === '.jpg' || ext === '.jpeg') contentType = 'image/jpeg';
            else if (ext === '.gif') contentType = 'image/gif';
            else if (ext === '.webp') contentType = 'image/webp';
            
            res.writeHead(200, {'Content-Type': contentType});
            const imageStream = fs.createReadStream(imagePath);
            imageStream.pipe(res);
            return;
        } else {
            res.writeHead(404, {'Content-Type': 'text/plain'});
            res.end('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            return;
        }
    }

    if (req.method === 'GET' && req.url === '/') {
        const html = `<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üéØ NFT –ú–∞—Å—Ç–µ—Ä - –°–æ–∑–¥–∞–Ω–∏–µ NFT –∫–æ–ª–ª–µ–∫—Ü–∏–∏</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            margin: 0;
            padding: 20px;
            min-height: 100vh;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(0,0,0,0.2);
            padding: 30px;
            border-radius: 20px;
            backdrop-filter: blur(10px);
        }
        .header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            background: rgba(255,255,255,0.1);
            border-radius: 15px;
        }
        .step-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }
        .step-card {
            background: rgba(255,255,255,0.1);
            padding: 25px;
            border-radius: 15px;
            border-left: 5px solid #4CAF50;
            transition: all 0.3s;
            position: relative;
        }
        .step-card:hover {
            background: rgba(255,255,255,0.15);
            transform: translateY(-5px);
        }
        .step-card.active {
            border-left-color: #ff9800;
            background: rgba(255, 152, 0, 0.2);
        }
        .step-card.completed {
            border-left-color: #4CAF50;
            background: rgba(76, 175, 80, 0.2);
        }
        .btn {
            background: #4CAF50;
            color: white;
            padding: 15px 25px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            margin: 10px 5px;
            font-size: 16px;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-block;
        }
        .btn:hover {
            background: #45a049;
            transform: translateY(-2px);
        }
        .btn-process {
            background: #ff9800;
            font-size: 18px;
            padding: 20px 30px;
            font-weight: bold;
        }
        .btn-process:hover {
            background: #f57c00;
        }
        .btn-github {
            background: #2196F3;
        }
        .btn-github:hover {
            background: #1976D2;
        }
        .btn-final {
            background: #9C27B0;
        }
        .btn-final:hover {
            background: #7B1FA2;
        }
        .status {
            display: inline-block;
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: bold;
            margin-left: 10px;
        }
        .status.ready {
            background: #4CAF50;
        }
        .status.waiting {
            background: #ff9800;
        }
        .status.completed {
            background: #2196F3;
        }
        .status.processing {
            background: #FF5722;
            animation: pulse 1.5s infinite;
        }
        #result {
            background: rgba(0,0,0,0.3);
            padding: 20px;
            border-radius: 10px;
            margin: 20px 0;
            display: none;
        }
        .progress-bar {
            width: 100%;
            height: 20px;
            background: rgba(255,255,255,0.2);
            border-radius: 10px;
            overflow: hidden;
            margin: 10px 0;
        }
        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #4CAF50, #45a049);
            width: 0%;
            transition: width 0.5s;
        }
        .quick-actions {
            background: rgba(255,255,255,0.1);
            padding: 20px;
            border-radius: 10px;
            margin: 30px 0;
        }
        .action-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
        }
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }
        .metadata-preview {
            background: rgba(0,0,0,0.5);
            padding: 15px;
            border-radius: 8px;
            margin: 10px 0;
            font-family: monospace;
            font-size: 12px;
            max-height: 300px;
            overflow-y: auto;
        }
        .file-info {
            background: rgba(76, 175, 80, 0.2);
            padding: 15px;
            border-radius: 10px;
            border-left: 4px solid #4CAF50;
            margin: 10px 0;
        }
        .image-preview {
            background: rgba(255,255,255,0.1);
            padding: 20px;
            border-radius: 15px;
            margin: 20px 0;
            text-align: center;
            border: 2px dashed rgba(255,255,255,0.3);
            transition: all 0.3s ease;
            min-height: 200px;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }
        .image-preview:hover {
            border-color: rgba(255,255,255,0.6);
            background: rgba(255,255,255,0.15);
        }
        .preview-image {
            max-width: 100%;
            max-height: 400px;
            border-radius: 10px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.3);
            transition: transform 0.3s ease;
            object-fit: contain;
        }
        .preview-image:hover {
            transform: scale(1.02);
            cursor: pointer;
        }
        .preview-placeholder {
            color: rgba(255,255,255,0.7);
            font-size: 18px;
            padding: 40px;
            text-align: center;
        }
        .image-details {
            margin-top: 15px;
            background: rgba(0,0,0,0.3);
            padding: 10px;
            border-radius: 8px;
            font-size: 14px;
        }
        .image-loading {
            color: #4CAF50;
            font-weight: bold;
            animation: pulse 1.5s infinite;
        }
        .editable-field {
            background: rgba(255,255,255,0.1);
            border: 2px solid rgba(255,255,255,0.3);
            border-radius: 8px;
            padding: 10px;
            margin: 10px 0;
            color: white;
            font-family: inherit;
            transition: all 0.3s ease;
        }
        .editable-field:focus {
            border-color: #4CAF50;
            background: rgba(255,255,255,0.15);
            outline: none;
        }
        .editable-title {
            font-size: 18px;
            font-weight: bold;
            width: 100%;
            resize: none;
        }
        .editable-description {
            width: 100%;
            min-height: 100px;
            resize: vertical;
            font-size: 14px;
            line-height: 1.5;
        }
        .edit-controls {
            background: rgba(255,255,255,0.1);
            padding: 15px;
            border-radius: 10px;
            margin: 15px 0;
            text-align: center;
        }
        .btn-edit {
            background: #FF9800;
            margin: 5px;
        }
        .btn-edit:hover {
            background: #F57C00;
        }
        .btn-save {
            background: #4CAF50;
            margin: 5px;
        }
        .btn-save:hover {
            background: #45a049;
        }
        .btn-cancel {
            background: #757575;
            margin: 5px;
        }
        .btn-cancel:hover {
            background: #616161;
        }
        .readonly-field {
            background: rgba(0,0,0,0.3);
            padding: 10px;
            border-radius: 8px;
            margin: 10px 0;
            border-left: 4px solid #4CAF50;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üéØ NFT –ú–∞—Å—Ç–µ—Ä - –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏—Å–∫—É—Å—Å—Ç–≤–∞</h1>
            <p>–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å–æ–∑–¥–∞–Ω–∏—è NFT —Ç–æ–∫–µ–Ω–æ–≤ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ò–ò –∞–Ω–∞–ª–∏–∑–æ–º –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–π</p>
            <div class="file-info">
                <h3>‚úÖ –í–∞—à —Ñ–∞–π–ª –≥–æ—Ç–æ–≤ –∫ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∞–Ω–∞–ª–∏–∑—É!</h3>
                <p><strong>–†–∞–∑–º–µ—Ä:</strong> ~278 –ö–ë | <strong>–°—Ç–∞—Ç—É—Å:</strong> <span class="status completed">–ó–∞–≥—Ä—É–∂–µ–Ω</span></p>
                <p><strong>–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏:</strong> <span id="uploadTime"></span></p>
                <p><strong>ID —Ñ–∞–π–ª–∞:</strong> NFT_<span id="fileId"></span></p>
                <p><strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:</strong> üé® –ì–æ—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è</p>
            </div>
            
            <div class="image-preview" id="imagePreview">
                <div class="preview-placeholder" id="previewPlaceholder">
                    üñºÔ∏è –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
                </div>
                <div id="imageContainer" style="display: none;">
                    <img id="previewImage" class="preview-image" alt="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ">
                    <div class="image-details" id="imageDetails">
                        <strong>üìä –î–µ—Ç–∞–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</strong><br>
                        <span id="imageDimensions">–†–∞–∑–º–µ—Ä—ã: –ó–∞–≥—Ä—É–∑–∫–∞...</span><br>
                        <span id="imageFormat">–§–æ—Ä–º–∞—Ç: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ...</span><br>
                        <span id="imageSize">–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ~278 –ö–ë</span>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="step-grid">
            <div class="step-card active" id="step1">
                <h3>ü§ñ –®–∞–≥ 1: –î–µ—Ç–∞–ª—å–Ω—ã–π –ò–ò –∞–Ω–∞–ª–∏–∑</h3>
                <p><strong>–°—Ç–∞—Ç—É—Å:</strong> <span class="status ready" id="status1">–ì–æ—Ç–æ–≤</span></p>
                <p>–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–æ—Å–ª–∞–Ω–∏—è –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è.</p>
                <button class="btn btn-process" onclick="generateAIDescription()">
                    üé® –°–æ–∑–¥–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
                </button>
                <div id="ai-result" style="display: none;"></div>
            </div>
            
            <div class="step-card" id="step2">
                <h3>üìù –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö</h3>
                <p><strong>–°—Ç–∞—Ç—É—Å:</strong> <span class="status waiting" id="status2">–û–∂–∏–¥–∞–Ω–∏–µ</span></p>
                <p>–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ JSON –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º–∏ ERC-721.</p>
                <button class="btn" onclick="createMetadata()" id="btn2" disabled>
                    üìä –°–æ–∑–¥–∞—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
                </button>
                <div id="metadata-result" style="display: none;"></div>
            </div>
            
            <div class="step-card" id="step3">
                <h3>üåê –®–∞–≥ 3: –ó–∞–≥—Ä—É–∑–∫–∞ –≤ GitHub</h3>
                <p><strong>–°—Ç–∞—Ç—É—Å:</strong> <span class="status waiting" id="status3">–û–∂–∏–¥–∞–Ω–∏–µ</span></p>
                <p>–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π.</p>
                <button class="btn btn-github" onclick="uploadToGitHub()" id="btn3" disabled>
                    üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤ GitHub
                </button>
                <div id="github-result" style="display: none;"></div>
            </div>
            
            <div class="step-card" id="step4">
                <h3>üé® –®–∞–≥ 4: –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è NFT</h3>
                <p><strong>–°—Ç–∞—Ç—É—Å:</strong> <span class="status waiting" id="status4">–û–∂–∏–¥–∞–Ω–∏–µ</span></p>
                <p>–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ NFT —Ç–æ–∫–µ–Ω–∞ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º.</p>
                <button class="btn btn-final" onclick="finalizeNFT()" id="btn4" disabled>
                    ‚ú® –°–æ–∑–¥–∞—Ç—å NFT
                </button>
                <div id="final-result" style="display: none;"></div>
            </div>
        </div>
        
        <div id="progress-section" style="display: none;">
            <h3>üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏:</h3>
            <div class="progress-bar">
                <div class="progress-fill" id="progressBar"></div>
            </div>
            <p id="progressText">–ì–æ—Ç–æ–≤ –∫ –Ω–∞—á–∞–ª—É</p>
        </div>
        
        <div id="result"></div>
        
        <div class="quick-actions">
            <h3>üí° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</h3>
            <div class="action-grid">
                <button class="btn" onclick="viewFile()">üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∞–π–ª–∞</button>
                <button class="btn" onclick="editSettings()">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ NFT</button>
                <button class="btn" onclick="autoProcess()">ü§ñ –ê–≤—Ç–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞</button>
                <button class="btn" onclick="downloadMetadata()">üíæ –°–∫–∞—á–∞—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ</button>
                <a href="http://localhost:3003" target="_blank" class="btn">üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ</a>
                <button class="btn" onclick="resetProcess()">üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ</button>
            </div>
        </div>
        
        <div style="background: rgba(255,255,255,0.1); padding: 20px; border-radius: 10px; margin: 30px 0;">
            <h3>üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:</h3>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 15px; text-align: center;">
                <div>
                    <h4>üìÅ –§–∞–π–ª–æ–≤</h4>
                    <p style="font-size: 24px; margin: 0;" id="fileCount">1</p>
                </div>
                <div>
                    <h4>‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ</h4>
                    <p style="font-size: 24px; margin: 0;" id="completedCount">0</p>
                </div>
                <div>
                    <h4>‚è±Ô∏è –í—Ä–µ–º—è</h4>
                    <p style="font-size: 24px; margin: 0;" id="timeSpent">0:00</p>
                </div>
                <div>
                    <h4>üéØ –ü—Ä–æ–≥—Ä–µ—Å—Å</h4>
                    <p style="font-size: 24px; margin: 0;" id="totalProgress">0%</p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        let currentStep = 1;
        let completedSteps = 0;
        let startTime = new Date();
        let nftData = {};
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        document.getElementById('uploadTime').textContent = new Date().toLocaleString('ru-RU');
        document.getElementById('fileId').textContent = Date.now();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        loadImagePreview();
        
        setInterval(updateTimer, 1000);
        
        // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        function loadImagePreview() {
            // –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –ø–∞–ø–∫–∏ images
            const imageFiles = [
                'images/ChatGPT Image 7 –∏—é–ª. 2025 –≥., 18_41_36.png',
                'images/ChatGPT Image 7 –∏—é–ª. 2025 –≥., 18_41_39.png',
                'images/NFT_1752871023.png',
                'images/NFT_1752871878.png',
                'images/NFT_1752915028.png',
                'images/img_BQACAgQAAxkBAAN1aHuduGE0vgZHn42m1EsAATowzu18AAIhGgACZfHgU3QRd3E1YlOJNgQ.png',
                'images/img_BQACAgQAAxkBAAN3aHum1QHqUXmRuPAHVOpsnZNuxU8AAkIaAAJl8eBT8oa3OrOmPLw2BA.png',
                'images/img_BQACAgQAAxkBAAN5aHum-yYKYJhXztPhr0xMyxRx6scAAkMaAAJl8eBT5SD8UTS9QJk2BA.png',
                'images/img_BQACAgQAAxkBAAN7aHuu7Ce62-PWcVB1To62z80_bv8AAlEaAAJl8eBTmGZsU58RVBY2BA.png',
                'images/img_BQACAgQAAxkBAAN9aHuvuuPGT92Rgp5Ezk-itqLZVvkAAlMaAAJl8eBTg8I4vdEaCvU2BA.png'
            ];
            
            // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            const randomImage = imageFiles[Math.floor(Math.random() * imageFiles.length)];
            
            const previewPlaceholder = document.getElementById('previewPlaceholder');
            const imageContainer = document.getElementById('imageContainer');
            const previewImage = document.getElementById('previewImage');
            
            console.log('üñºÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', randomImage);
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
            previewImage.src = '/' + randomImage;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            previewPlaceholder.innerHTML = 'üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è NFT...';
            previewPlaceholder.style.display = 'block';
            imageContainer.style.display = 'none';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
            previewImage.onload = function() {
                // –°–∫—Ä—ã–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                previewPlaceholder.style.display = 'none';
                imageContainer.style.display = 'block';
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                const imageDimensions = document.getElementById('imageDimensions');
                const imageFormat = document.getElementById('imageFormat');
                
                imageDimensions.textContent = '–†–∞–∑–º–µ—Ä—ã: ' + this.naturalWidth + ' x ' + this.naturalHeight + ' –ø–∏–∫—Å–µ–ª–µ–π';
                imageFormat.textContent = '–§–æ—Ä–º–∞—Ç: ' + (randomImage.includes('.png') ? 'PNG' : 'JPG');
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ —Ç–µ–∫—É—â–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                window.currentImagePath = randomImage;
                
                console.log('‚úÖ –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
                console.log('üìä –†–∞–∑–º–µ—Ä—ã:', this.naturalWidth + 'x' + this.naturalHeight);
                console.log('üìÅ –§–∞–π–ª:', randomImage);
            };
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
            previewImage.onerror = function() {
                console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', randomImage);
                
                // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                const fallbackImages = [
                    'images/NFT_1752871023.png',
                    'images/NFT_1752871878.png',
                    'images/NFT_1752915028.png'
                ];
                
                const fallback = fallbackImages[Math.floor(Math.random() * fallbackImages.length)];
                console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', fallback);
                
                this.src = '/' + fallback;
                window.currentImagePath = fallback;
                
                // –ï—Å–ª–∏ –∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
                this.onerror = function() {
                    previewPlaceholder.style.display = 'block';
                    imageContainer.style.display = 'none';
                    previewPlaceholder.innerHTML = 'üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏ –≥–æ—Ç–æ–≤–æ –∫ –∞–Ω–∞–ª–∏–∑—É<br><small>üìä –†–∞–∑–º–µ—Ä: ~278 –ö–ë | ‚úÖ –°—Ç–∞—Ç—É—Å: –ì–æ—Ç–æ–≤–æ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ</small>';
                    console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–µ–≤—å—é, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫');
                    
                    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø—É—Ç—å
                    window.currentImagePath = 'images/NFT_default.png';
                };
            };
        }
        
        async function generateAIDescription() {
            setStepStatus(1, 'processing', '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è...');
            showProgress();
            updateProgress(0, '–ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ–ø–∏—Å–∞–Ω–∏–π...');
            
            // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
            if (!window.currentImagePath) {
                console.log('üîÑ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ, –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤–æ–µ –ø—Ä–µ–≤—å—é...');
                loadImagePreview();
                await sleep(1000); // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
            }
            
            try {
                updateProgress(30, '–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
                await sleep(1000);
                
                updateProgress(60, '–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è...');
                
                // –ü–µ—Ä–µ–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
                const requestData = { 
                    fileSize: '278KB',
                    uploadTime: new Date().toISOString(),
                    currentImage: window.currentImagePath || 'default'
                };
                
                const response = await fetch('/generate-description', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestData)
                });
                
                updateProgress(90, '–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...');
                await sleep(500);
                
                const result = await response.json();
                nftData.description = result;
                
                updateProgress(100, '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!');
                
                const resultHtml = '<div class="metadata-preview">' +
                    '<h4>üé® –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:</h4>' +
                    
                    '<div class="edit-controls">' +
                    '<h4>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏—è:</h4>' +
                    '<button class="btn btn-edit" onclick="enableEditing()">üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>' +
                    '<button class="btn btn-save" onclick="saveEdits()" style="display: none;" id="saveBtn">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>' +
                    '<button class="btn btn-cancel" onclick="cancelEdits()" style="display: none;" id="cancelBtn">‚ùå –û—Ç–º–µ–Ω–∏—Ç—å</button>' +
                    '</div>' +
                    
                    '<div style="margin-bottom: 15px;">' +
                    '<p><strong>üìù –ù–∞–∑–≤–∞–Ω–∏–µ:</strong></p>' +
                    '<div class="readonly-field" id="titleDisplay">' + result.title + '</div>' +
                    '<textarea class="editable-field editable-title" id="titleEdit" style="display: none;">' + result.title + '</textarea>' +
                    '</div>' +
                    
                    '<div style="margin-bottom: 15px;">' +
                    '<p><strong>ÔøΩ –û–ø–∏—Å–∞–Ω–∏–µ:</strong></p>' +
                    '<div class="readonly-field" id="descriptionDisplay">' + result.description + '</div>' +
                    '<textarea class="editable-field editable-description" id="descriptionEdit" style="display: none;">' + result.description + '</textarea>' +
                    '</div>' +
                    
                    '<div style="margin-bottom: 15px; padding: 10px; background: rgba(33, 150, 243, 0.2); border-radius: 8px;">' +
                    '<p><strong>üé® –í–∏–∑—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:</strong><br>' + (result.visualAnalysis || '–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è') + '</p>' +
                    '</div>' +
                    '<div style="margin-bottom: 15px; padding: 10px; background: rgba(255, 152, 0, 0.2); border-radius: 8px;">' +
                    '<p><strong>üí≠ –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ:</strong><br>' + (result.artisticMessage || '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è') + '</p>' +
                    '</div>' +
                    '<div style="margin-bottom: 15px; padding: 10px; background: rgba(156, 39, 176, 0.2); border-radius: 8px;">' +
                    '<p><strong>üòä –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ:</strong><br>–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ ' + (result.emotionalImpact || '—Å–æ–∑–¥–∞–µ—Ç —Å–∏–ª—å–Ω–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ') + '</p>' +
                    '</div>' +
                    '<div style="margin-bottom: 15px; padding: 10px; background: rgba(96, 125, 139, 0.2); border-radius: 8px;">' +
                    '<p><strong>üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:</strong><br>' + (result.technicalNote || '–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è') + '</p>' +
                    '</div>' +
                    '<div style="margin-bottom: 15px;">' +
                    '<p><strong>üè∑Ô∏è –ê—Ç—Ä–∏–±—É—Ç—ã –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</strong></p>' +
                    '<div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 8px;">' +
                    result.attributes.map(attr => '<div style="background: rgba(255,255,255,0.1); padding: 8px; border-radius: 5px; text-align: center;"><strong>' + attr.trait_type + ':</strong><br>' + attr.value + '</div>').join('') +
                    '</div>' +
                    '</div>' +
                    (result.analysis ? '<div style="margin-top: 15px; padding: 10px; background: rgba(0, 150, 136, 0.2); border-radius: 8px;">' +
                    '<p><strong>üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:</strong></p>' +
                    '<ul>' +
                    '<li><strong>–ö–æ–º–ø–æ–∑–∏—Ü–∏—è:</strong> ' + result.analysis.composition + '</li>' +
                    '<li><strong>–¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞:</strong> ' + result.analysis.colorPalette + '</li>' +
                    '<li><strong>–¢–µ—Ö–Ω–∏–∫–∞:</strong> ' + result.analysis.technique + '</li>' +
                    '<li><strong>–ò—Å—Ç–æ—á–Ω–∏–∫ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è:</strong> ' + result.analysis.inspiration + '</li>' +
                    '</ul>' +
                    '</div>' : '') +
                    '</div>';
                
                document.getElementById('ai-result').innerHTML = resultHtml;
                document.getElementById('ai-result').style.display = 'block';
                
                setStepStatus(1, 'completed', '–ó–∞–≤–µ—Ä—à–µ–Ω');
                setStepActive(2);
                enableButton('btn2');
                updateCompletedCount();
                
            } catch (error) {
                setStepStatus(1, 'ready', '–û—à–∏–±–∫–∞');
                showResult('<h3>‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</h3><p>' + error.message + '</p>');
            }
        }
        
        async function createMetadata() {
            if (!nftData.description) {
                alert('–°–Ω–∞—á–∞–ª–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ!');
                return;
            }
            
            setStepStatus(2, 'processing', '–°–æ–∑–¥–∞–Ω–∏–µ...');
            showProgress();
            updateProgress(0, '–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö...');
            
            try {
                await sleep(1000);
                updateProgress(50, '–°–æ–∑–¥–∞–Ω–∏–µ JSON —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...');
                
                // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
                const currentTitle = document.getElementById('titleDisplay') ? 
                    document.getElementById('titleDisplay').textContent : nftData.description.title;
                const currentDescription = document.getElementById('descriptionDisplay') ? 
                    document.getElementById('descriptionDisplay').textContent : nftData.description.description;
                
                const metadata = {
                    name: currentTitle,
                    description: currentDescription,
                    image: "ipfs://QmYourImageHash", // –ë—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π IPFS —Ö–µ—à
                    attributes: nftData.description.attributes,
                    external_url: "https://github.com/Bedeeuu/Nft-collection-",
                    animation_url: null,
                    background_color: null,
                    youtube_url: null,
                    properties: {
                        created_by: nftData.description.creator,
                        created_at: nftData.description.timestamp,
                        file_size: "1.3MB",
                        format: "Digital Art"
                    }
                };
                
                nftData.metadata = metadata;
                
                updateProgress(100, '–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!');
                
                const metadataHtml = '<div class="metadata-preview">' +
                    '<h4>üìä JSON –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:</h4>' +
                    '<pre>' + JSON.stringify(metadata, null, 2) + '</pre>' +
                    '</div>';
                
                document.getElementById('metadata-result').innerHTML = metadataHtml;
                document.getElementById('metadata-result').style.display = 'block';
                
                setStepStatus(2, 'completed', '–ó–∞–≤–µ—Ä—à–µ–Ω');
                setStepActive(3);
                enableButton('btn3');
                updateCompletedCount();
                
            } catch (error) {
                setStepStatus(2, 'waiting', '–û—à–∏–±–∫–∞');
                alert('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö: ' + error.message);
            }
        }
        
        async function uploadToGitHub() {
            if (!nftData.metadata) {
                alert('–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ!');
                return;
            }
            
            setStepStatus(3, 'processing', '–ó–∞–≥—Ä—É–∑–∫–∞...');
            showProgress();
            updateProgress(0, '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–≥—Ä—É–∑–∫–µ...');
            
            try {
                await sleep(1000);
                updateProgress(25, '–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...');
                await sleep(1000);
                updateProgress(50, '–ó–∞–≥—Ä—É–∑–∫–∞ –≤ GitHub...');
                await sleep(1500);
                updateProgress(75, '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...');
                await sleep(1000);
                updateProgress(100, '–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
                
                const githubInfo = {
                    repository: "https://github.com/Bedeeuu/Nft-collection-",
                    branch: "main",
                    files: [
                        "metadata/" + nftData.description.id + ".json",
                        "images/" + nftData.description.id + ".img"
                    ],
                    commit: "Add NFT: " + nftData.description.title
                };
                
                nftData.github = githubInfo;
                
                const githubHtml = '<div class="metadata-preview">' +
                    '<h4>üåê GitHub –∑–∞–≥—Ä—É–∑–∫–∞:</h4>' +
                    '<p><strong>–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:</strong> <a href="' + githubInfo.repository + '" target="_blank">' + githubInfo.repository + '</a></p>' +
                    '<p><strong>–í–µ—Ç–∫–∞:</strong> ' + githubInfo.branch + '</p>' +
                    '<p><strong>–§–∞–π–ª—ã:</strong></p>' +
                    '<ul>' +
                    githubInfo.files.map(file => '<li>' + file + '</li>').join('') +
                    '</ul>' +
                    '<p><strong>–ö–æ–º–º–∏—Ç:</strong> ' + githubInfo.commit + '</p>' +
                    '</div>';
                
                document.getElementById('github-result').innerHTML = githubHtml;
                document.getElementById('github-result').style.display = 'block';
                
                setStepStatus(3, 'completed', '–ó–∞–≤–µ—Ä—à–µ–Ω');
                setStepActive(4);
                enableButton('btn4');
                updateCompletedCount();
                
            } catch (error) {
                setStepStatus(3, 'waiting', '–û—à–∏–±–∫–∞');
                alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ GitHub: ' + error.message);
            }
        }
        
        async function finalizeNFT() {
            if (!nftData.github) {
                alert('–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤ GitHub!');
                return;
            }
            
            setStepStatus(4, 'processing', '–§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è...');
            showProgress();
            updateProgress(0, '–°–æ–∑–¥–∞–Ω–∏–µ NFT —Ç–æ–∫–µ–Ω–∞...');
            
            try {
                await sleep(1000);
                updateProgress(30, '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID...');
                await sleep(1000);
                updateProgress(60, '–°–æ–∑–¥–∞–Ω–∏–µ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞...');
                await sleep(1500);
                updateProgress(90, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –±–ª–æ–∫—á–µ–π–Ω–µ...');
                await sleep(1000);
                updateProgress(100, 'NFT —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
                
                const nftToken = {
                    tokenId: "NFT_" + Date.now(),
                    contractAddress: "0x" + Math.random().toString(16).substr(2, 40),
                    blockchain: "Ethereum",
                    standard: "ERC-721",
                    createdAt: new Date().toISOString(),
                    metadataUri: nftData.github.repository + "/metadata/" + nftData.description.id + ".json",
                    status: "Minted"
                };
                
                nftData.token = nftToken;
                
                const finalHtml = '<div class="metadata-preview">' +
                    '<h4>üé® NFT —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω!</h4>' +
                    '<p><strong>Token ID:</strong> ' + nftToken.tokenId + '</p>' +
                    '<p><strong>–ö–æ–Ω—Ç—Ä–∞–∫—Ç:</strong> ' + nftToken.contractAddress + '</p>' +
                    '<p><strong>–ë–ª–æ–∫—á–µ–π–Ω:</strong> ' + nftToken.blockchain + '</p>' +
                    '<p><strong>–°—Ç–∞–Ω–¥–∞—Ä—Ç:</strong> ' + nftToken.standard + '</p>' +
                    '<p><strong>–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:</strong> <a href="' + nftToken.metadataUri + '" target="_blank">–ü—Ä–æ—Å–º–æ—Ç—Ä</a></p>' +
                    '<p><strong>–°—Ç–∞—Ç—É—Å:</strong> <span style="color: #4CAF50; font-weight: bold;">' + nftToken.status + '</span></p>' +
                    '</div>' +
                    '<div style="text-align: center; margin: 20px 0;">' +
                    '<button class="btn btn-process" onclick="celebrateSuccess()">üéâ –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! NFT –ì–û–¢–û–í!</button>' +
                    '</div>';
                
                document.getElementById('final-result').innerHTML = finalHtml;
                document.getElementById('final-result').style.display = 'block';
                
                setStepStatus(4, 'completed', '–ó–∞–≤–µ—Ä—à–µ–Ω');
                updateCompletedCount();
                
            } catch (error) {
                setStepStatus(4, 'waiting', '–û—à–∏–±–∫–∞');
                alert('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è NFT: ' + error.message);
            }
        }
        
        // –£—Ç–∏–ª–∏—Ç—ã
        function setStepStatus(step, status, text) {
            const statusEl = document.getElementById('status' + step);
            statusEl.className = 'status ' + status;
            statusEl.textContent = text;
        }
        
        function setStepActive(step) {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ –≤—Å–µ—Ö —à–∞–≥–æ–≤
            for (let i = 1; i <= 4; i++) {
                document.getElementById('step' + i).classList.remove('active');
            }
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —à–∞–≥
            document.getElementById('step' + step).classList.add('active');
            currentStep = step;
        }
        
        function enableButton(btnId) {
            const btn = document.getElementById(btnId);
            btn.disabled = false;
            btn.style.opacity = '1';
        }
        
        function updateCompletedCount() {
            completedSteps++;
            document.getElementById('completedCount').textContent = completedSteps;
            document.getElementById('totalProgress').textContent = Math.round((completedSteps / 4) * 100) + '%';
        }
        
        function updateTimer() {
            const elapsed = new Date() - startTime;
            const minutes = Math.floor(elapsed / 60000);
            const seconds = Math.floor((elapsed % 60000) / 1000);
            document.getElementById('timeSpent').textContent = minutes + ':' + seconds.toString().padStart(2, '0');
        }
        
        function autoProcess() {
            if (confirm('ü§ñ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É?\\n\\n–≠—Ç–æ –≤—ã–ø–æ–ª–Ω–∏—Ç –≤—Å–µ —à–∞–≥–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:\\n1. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è\\n2. –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö\\n3. –ó–∞–≥—Ä—É–∑–∫–∞ –≤ GitHub\\n4. –°–æ–∑–¥–∞–Ω–∏–µ NFT\\n\\n–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–π–º–µ—Ç –æ–∫–æ–ª–æ 2-3 –º–∏–Ω—É—Ç.')) {
                generateAIDescription();
                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
                setTimeout(() => {
                    if (completedSteps >= 1) createMetadata();
                }, 8000);
                setTimeout(() => {
                    if (completedSteps >= 2) uploadToGitHub();
                }, 16000);
                setTimeout(() => {
                    if (completedSteps >= 3) finalizeNFT();
                }, 24000);
            }
        }
        
        function celebrateSuccess() {
            alert('üéâ –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú!\\n\\n–í–∞—à NFT —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!\\n\\n‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ\\n‚úÖ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã\\n‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –≤ GitHub\\n‚úÖ NFT —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω\\n\\n–í—ã –º–æ–∂–µ—Ç–µ —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–¥–∞–≤–∞—Ç—å –∏–ª–∏ —Ç–æ—Ä–≥–æ–≤–∞—Ç—å –≤–∞—à–∏–º NFT!');
        }
        
        function viewFile() {
            console.log('üëÅÔ∏è –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
            loadImagePreview();
            showNotification('üîÑ –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ!', 'info');
        }
        
        function editSettings() {
            alert('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ NFT:\\n\\n‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏\\n‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∏ —Ç–µ–≥–∏\\n‚Ä¢ –ê–≤—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–∞–≤–∞\\n‚Ä¢ –¶–µ–Ω–∞ –∏ —Ä–æ—è–ª—Ç–∏\\n‚Ä¢ Blockchain —Å–µ—Ç—å\\n‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏');
        }
        
        function downloadMetadata() {
            if (nftData.metadata) {
                const data = JSON.stringify(nftData.metadata, null, 2);
                const blob = new Blob([data], {type: 'application/json'});
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = nftData.description.id + '_metadata.json';
                a.click();
            } else {
                alert('–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ!');
            }
        }
        
        function resetProcess() {
            if (confirm('üîÑ –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ?\\n\\n–í–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç —Å–±—Ä–æ—à–µ–Ω.')) {
                location.reload();
            }
        }
        
        function showProgress() {
            document.getElementById('progress-section').style.display = 'block';
        }
        
        function updateProgress(percent, text) {
            document.getElementById('progressBar').style.width = percent + '%';
            document.getElementById('progressText').textContent = text;
        }
        
        function showResult(html) {
            const result = document.getElementById('result');
            result.innerHTML = html;
            result.style.display = 'block';
            result.scrollIntoView({ behavior: 'smooth' });
        }
        
        function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }
        
        // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏—è
        let originalTitle = '';
        let originalDescription = '';
        
        function enableEditing() {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            originalTitle = document.getElementById('titleDisplay').textContent;
            originalDescription = document.getElementById('descriptionDisplay').textContent;
            
            // –°–∫—Ä—ã–≤–∞–µ–º readonly –ø–æ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–µ
            document.getElementById('titleDisplay').style.display = 'none';
            document.getElementById('descriptionDisplay').style.display = 'none';
            document.getElementById('titleEdit').style.display = 'block';
            document.getElementById('descriptionEdit').style.display = 'block';
            
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
            document.querySelector('.btn-edit').style.display = 'none';
            document.getElementById('saveBtn').style.display = 'inline-block';
            document.getElementById('cancelBtn').style.display = 'inline-block';
            
            // –§–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤–æ–º –ø–æ–ª–µ
            document.getElementById('titleEdit').focus();
            
            console.log('üìù –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
        }
        
        function saveEdits() {
            // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            const newTitle = document.getElementById('titleEdit').value.trim();
            const newDescription = document.getElementById('descriptionEdit').value.trim();
            
            if (!newTitle || !newDescription) {
                alert('‚ö†Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏!');
                return;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            document.getElementById('titleDisplay').textContent = newTitle;
            document.getElementById('descriptionDisplay').textContent = newDescription;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ NFT
            if (nftData.description) {
                nftData.description.title = newTitle;
                nftData.description.description = newDescription;
            }
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ä–µ–∂–∏–º—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            exitEditMode();
            
            // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
            showNotification('‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!', 'success');
            console.log('üíæ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', {title: newTitle, description: newDescription});
        }
        
        function cancelEdits() {
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            document.getElementById('titleEdit').value = originalTitle;
            document.getElementById('descriptionEdit').value = originalDescription;
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ä–µ–∂–∏–º—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            exitEditMode();
            
            showNotification('‚ùå –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã', 'info');
            console.log('‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ');
        }
        
        function exitEditMode() {
            // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–µ –ø–æ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º readonly
            document.getElementById('titleEdit').style.display = 'none';
            document.getElementById('descriptionEdit').style.display = 'none';
            document.getElementById('titleDisplay').style.display = 'block';
            document.getElementById('descriptionDisplay').style.display = 'block';
            
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
            document.querySelector('.btn-edit').style.display = 'inline-block';
            document.getElementById('saveBtn').style.display = 'none';
            document.getElementById('cancelBtn').style.display = 'none';
        }
        
        function showNotification(message, type) {
            // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            const notification = document.createElement('div');
            notification.style.cssText = 'position: fixed; top: 20px; right: 20px; z-index: 1000; padding: 15px 20px; border-radius: 8px; color: white; font-weight: bold; box-shadow: 0 4px 12px rgba(0,0,0,0.3); transition: all 0.3s ease;';
            
            if (type === 'success') {
                notification.style.background = 'linear-gradient(135deg, #4CAF50, #45a049)';
            } else if (type === 'info') {
                notification.style.background = 'linear-gradient(135deg, #2196F3, #1976D2)';
            }
            
            notification.textContent = message;
            document.body.appendChild(notification);
            
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.style.opacity = '0';
                    notification.style.transform = 'translateX(100%)';
                    setTimeout(() => {
                        document.body.removeChild(notification);
                    }, 300);
                }
            }, 3000);
        }
        
        window.onload = function() {
            console.log('üéØ NFT –ú–∞—Å—Ç–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∞–≤–∏—à –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            document.addEventListener('keydown', function(e) {
                // Ctrl+E –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                if (e.ctrlKey && e.key === 'e') {
                    e.preventDefault();
                    const editBtn = document.querySelector('.btn-edit');
                    if (editBtn && editBtn.style.display !== 'none') {
                        enableEditing();
                    }
                }
                
                // Ctrl+S –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                if (e.ctrlKey && e.key === 's') {
                    e.preventDefault();
                    const saveBtn = document.getElementById('saveBtn');
                    if (saveBtn && saveBtn.style.display !== 'none') {
                        saveEdits();
                    }
                }
                
                // Escape –¥–ª—è –æ—Ç–º–µ–Ω—ã
                if (e.key === 'Escape') {
                    const cancelBtn = document.getElementById('cancelBtn');
                    if (cancelBtn && cancelBtn.style.display !== 'none') {
                        cancelEdits();
                    }
                }
            });
        };
    </script>
</body>
</html>`;
        
        res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'});
        res.end(html);
        return;
    }
    
    if (req.method === 'POST' && req.url === '/generate-description') {
        let body = '';
        req.on('data', chunk => {
            body += chunk.toString();
        });
        
        req.on('end', async () => {
            console.log('ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è NFT...');
            console.log('üé® –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è...');
            
            // –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞
            let requestData = {};
            try {
                requestData = JSON.parse(body);
                if (requestData.currentImage && requestData.currentImage !== 'default') {
                    currentServerImagePath = requestData.currentImage;
                    console.log('üì∏ –ü–æ–ª—É—á–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞:', currentServerImagePath);
                }
            } catch (e) {
                console.log('üìù –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
            }
            
            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
            const currentImagePath = getCurrentImagePath();
            console.log('üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', currentImagePath);
            
            // –ü–æ–ø—ã—Ç–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å –ø–æ–º–æ—â—å—é OpenAI GPT-4 Vision
            let analysisResult;
            const openaiAnalysis = await analyzeImageWithGPT(currentImagePath);
            
            if (openaiAnalysis.success) {
                console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å OpenAI GPT-4 Vision');
                analysisResult = generateNFTFromGPTAnalysis(openaiAnalysis.data, currentImagePath);
            } else {
                console.log('‚ö†Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
                analysisResult = analyzeSpecificImageFallback(currentImagePath);
            }
            
            function getCurrentImagePath() {
                // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –∏–∑ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
                if (currentServerImagePath) {
                    return currentServerImagePath;
                }
                
                // –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
                const availableImages = [
                    'images/ChatGPT Image 7 –∏—é–ª. 2025 –≥., 18_41_36.png',
                    'images/ChatGPT Image 7 –∏—é–ª. 2025 –≥., 18_41_39.png',
                    'images/NFT_1752871023.png',
                    'images/NFT_1752871878.png',
                    'images/NFT_1752915028.png',
                    'images/img_BQACAgQAAxkBAAN1aHuduGE0vgZHn42m1EsAATowzu18AAIhGgACZfHgU3QRd3E1YlOJNgQ.png'
                ];
                
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–≤ —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —ç—Ç–æ –±—É–¥–µ—Ç —Ç–µ–∫—É—â–µ–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ)
                const selectedImage = availableImages[Math.floor(Math.random() * availableImages.length)];
                currentServerImagePath = selectedImage;
                return selectedImage;
            }
            
            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è NFT –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ GPT –∞–Ω–∞–ª–∏–∑–∞
            function generateNFTFromGPTAnalysis(gptData, imagePath) {
                const fileName = imagePath.split('/').pop();
                const nftId = Date.now();
                
                return {
                    id: nftId,
                    name: gptData.name || `AI Generated NFT #${nftId}`,
                    description: gptData.description || 'AI generated NFT description',
                    image: imagePath,
                    fileName: fileName,
                    technique: gptData.style || 'AI Analysis',
                    style: gptData.style || 'Generated Art',
                    mood: gptData.mood || 'AI Detected',
                    colorScheme: gptData.colors || 'Analyzed by AI',
                    content: gptData.description || 'AI generated content',
                    visualElements: 'Analyzed by GPT-4 Vision',
                    details: `–°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é OpenAI GPT-4 Vision –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${fileName}`,
                    attributes: gptData.attributes || ['AI Generated', 'GPT-4 Vision', 'Unique'],
                    source: 'OpenAI GPT-4 Vision'
                };
            }
            
            // –†–µ–∑–µ—Ä–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–ª–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)
            function analyzeSpecificImageFallback(imagePath) {
                const fileName = imagePath.split('/').pop();
                
                // –î–µ—Ç–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π —Ä–µ–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                const imageDatabase = {
                    'ChatGPT Image 7 –∏—é–ª. 2025 –≥., 18_41_36.png': {
                        content: '–∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è —Å –≤–æ–ª–Ω–∏—Å—Ç—ã–º–∏ —Ñ–æ—Ä–º–∞–º–∏ –∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–º–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏',
                        visualElements: '–ø–ª–∞–≤–Ω—ã–µ –∏–∑–æ–≥–Ω—É—Ç—ã–µ –ª–∏–Ω–∏–∏, —Å–æ–∑–¥–∞—é—â–∏–µ –æ—â—É—â–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è –∏ –¥–∏–Ω–∞–º–∏–∫–∏',
                        colorScheme: '—è—Ä–∫–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Å –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–º–∏ —Å–∏–Ω–∏–º–∏, —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–º–∏ –∏ —Ä–æ–∑–æ–≤—ã–º–∏ –æ—Ç—Ç–µ–Ω–∫–∞–º–∏',
                        technique: '–ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ò–ò –∏—Å–∫—É—Å—Å—Ç–≤–æ',
                        style: '–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π —Ü–∏—Ñ—Ä–æ–≤–æ–π —ç–∫—Å–ø—Ä–µ—Å—Å–∏–æ–Ω–∏–∑–º',
                        mood: '–¥–∏–Ω–∞–º–∏—á–Ω–æ–µ –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω–æ–µ',
                        details: '–ø–µ—Ä–µ–ø–ª–µ—Ç–∞—é—â–∏–µ—Å—è –≤–æ–ª–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å –º—è–≥–∫–∏–º–∏ —Å–≤–µ—Ç–æ–≤—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏'
                    },
                    'ChatGPT Image 7 –∏—é–ª. 2025 –≥., 18_41_39.png': {
                        content: '—Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –≥–æ—Ä–æ–¥—Å–∫–æ–π –ø–µ–π–∑–∞–∂ —Å –Ω–µ–æ–Ω–æ–≤—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏',
                        visualElements: '–≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–¥–∞–Ω–∏–π, –æ—Å–≤–µ—â–µ–Ω–Ω—ã–µ —è—Ä–∫–∏–º–∏ –Ω–µ–æ–Ω–æ–≤—ã–º–∏ –æ–≥–Ω—è–º–∏',
                        colorScheme: '–∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Å –ø—Ä–µ–æ–±–ª–∞–¥–∞–Ω–∏–µ–º —Å–∏–Ω–∏—Ö, –∫—Ä–∞—Å–Ω—ã—Ö –∏ –∂–µ–ª—Ç—ã—Ö –Ω–µ–æ–Ω–æ–≤—ã—Ö —Ü–≤–µ—Ç–æ–≤',
                        technique: '–ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ò–ò –∏—Å–∫—É—Å—Å—Ç–≤–æ',
                        style: '–ö–∏–±–µ—Ä–ø–∞–Ω–∫ –∞—Ä—Ç',
                        mood: '—Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ–µ',
                        details: '–¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å –≥–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏ —Å–≤–µ—Ç–æ–≤—ã–º–∏ –ø–æ—Ç–æ–∫–∞–º–∏'
                    },
                    // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                };
                
                const imageInfo = imageDatabase[fileName] || {
                    content: '—É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Ü–∏—Ñ—Ä–æ–≤–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞',
                    visualElements: '—Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã',
                    colorScheme: '–≥–∞—Ä–º–æ–Ω–∏—á–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞',
                    technique: '–¶–∏—Ñ—Ä–æ–≤–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ',
                    style: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ü–∏—Ñ—Ä–æ–≤–æ–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
                    mood: '—ç–∫—Å–ø—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ',
                    details: '–¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–∏—Ñ—Ä–æ–≤–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è'
                };
                
                return {
                    ...imageInfo,
                    fileName: fileName,
                    source: '–õ–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö'
                };
            }
            
            function analyzeSpecificImage(imagePath) {
                const fileName = imagePath.split('/').pop();
                
                // –î–µ—Ç–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π —Ä–µ–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                const imageDatabase = {
                    'ChatGPT Image 7 –∏—é–ª. 2025 –≥., 18_41_36.png': {
                        content: '–∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è —Å –≤–æ–ª–Ω–∏—Å—Ç—ã–º–∏ —Ñ–æ—Ä–º–∞–º–∏ –∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–º–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏',
                        visualElements: '–ø–ª–∞–≤–Ω—ã–µ –∏–∑–æ–≥–Ω—É—Ç—ã–µ –ª–∏–Ω–∏–∏, —Å–æ–∑–¥–∞—é—â–∏–µ –æ—â—É—â–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è –∏ –¥–∏–Ω–∞–º–∏–∫–∏',
                        colorScheme: '—è—Ä–∫–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Å –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–º–∏ —Å–∏–Ω–∏–º–∏, —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–º–∏ –∏ —Ä–æ–∑–æ–≤—ã–º–∏ –æ—Ç—Ç–µ–Ω–∫–∞–º–∏',
                        technique: '–ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ò–ò –∏—Å–∫—É—Å—Å—Ç–≤–æ',
                        style: '–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π —Ü–∏—Ñ—Ä–æ–≤–æ–π —ç–∫—Å–ø—Ä–µ—Å—Å–∏–æ–Ω–∏–∑–º',
                        mood: '–¥–∏–Ω–∞–º–∏—á–Ω–æ–µ –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω–æ–µ',
                        details: '–ø–µ—Ä–µ–ø–ª–µ—Ç–∞—é—â–∏–µ—Å—è –≤–æ–ª–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å –º—è–≥–∫–∏–º–∏ —Å–≤–µ—Ç–æ–≤—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏'
                    },
                    'ChatGPT Image 7 –∏—é–ª. 2025 –≥., 18_41_39.png': {
                        content: '—Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –≥–æ—Ä–æ–¥—Å–∫–æ–π –ø–µ–π–∑–∞–∂ —Å –Ω–µ–æ–Ω–æ–≤—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏',
                        visualElements: '–≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–¥–∞–Ω–∏–π, –æ—Å–≤–µ—â–µ–Ω–Ω—ã–µ —è—Ä–∫–∏–º–∏ –Ω–µ–æ–Ω–æ–≤—ã–º–∏ –æ–≥–Ω—è–º–∏',
                        colorScheme: '–∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Å –ø—Ä–µ–æ–±–ª–∞–¥–∞–Ω–∏–µ–º —Å–∏–Ω–∏—Ö, –∫—Ä–∞—Å–Ω—ã—Ö –∏ –∂–µ–ª—Ç—ã—Ö –Ω–µ–æ–Ω–æ–≤—ã—Ö —Ü–≤–µ—Ç–æ–≤',
                        technique: '–ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ò–ò –∏—Å–∫—É—Å—Å—Ç–≤–æ',
                        style: '–ö–∏–±–µ—Ä–ø–∞–Ω–∫ –∞—Ä—Ç',
                        mood: '—Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ–µ',
                        details: '–¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å –≥–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏ —Å–≤–µ—Ç–æ–≤—ã–º–∏ –ø–æ—Ç–æ–∫–∞–º–∏'
                    },
                    'NFT_1752871023.png': {
                        content: '–ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–º–∏ —á–µ—Ä—Ç–∞–º–∏ –ª–∏—Ü–∞',
                        visualElements: '–¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–µ—Ä—Ç—ã –ª–∏—Ü–∞ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –≥–ª–∞–∑–∞ –∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ',
                        colorScheme: '—Ç–µ–ø–ª–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ç–µ–ª–µ—Å–Ω—ã–º–∏ —Ç–æ–Ω–∞–º–∏ –∏ –º—è–≥–∫–∏–º–∏ —Ç–µ–Ω—è–º–∏',
                        technique: '–¶–∏—Ñ—Ä–æ–≤–∞—è –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è –∂–∏–≤–æ–ø–∏—Å—å',
                        style: '–¶–∏—Ñ—Ä–æ–≤–æ–π —Ä–µ–∞–ª–∏–∑–º',
                        mood: '—Å–æ–∑–µ—Ä—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∏ –∏–Ω—Ç–∏–º–Ω–æ–µ',
                        details: '—Ç—â–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–µ—Ç–æ—Ç–µ–Ω–µ–≤—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –∏ —Ç–µ–∫—Å—Ç—É—Ä—ã –∫–æ–∂–∏'
                    },
                    'NFT_1752871878.png': {
                        content: '–ø—Ä–∏—Ä–æ–¥–Ω—ã–π –ø–µ–π–∑–∞–∂ —Å –≥–æ—Ä–Ω—ã–º–∏ –º–∞—Å—Å–∏–≤–∞–º–∏ –∏ –æ–±–ª–∞—á–Ω—ã–º –Ω–µ–±–æ–º',
                        visualElements: '–≤–µ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≥–æ—Ä–Ω—ã–µ –ø–∏–∫–∏, –ø–æ–∫—Ä—ã—Ç—ã–µ —Å–Ω–µ–≥–æ–º, –ø–æ–¥ –¥—Ä–∞–º–∞—Ç–∏—á–Ω—ã–º –Ω–µ–±–æ–º',
                        colorScheme: '–ø—Ä–æ—Ö–ª–∞–¥–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Å –ø—Ä–µ–æ–±–ª–∞–¥–∞–Ω–∏–µ–º –≥–æ–ª—É–±—ã—Ö, –±–µ–ª—ã—Ö –∏ —Å–µ—Ä—ã—Ö —Ç–æ–Ω–æ–≤',
                        technique: '–¶–∏—Ñ—Ä–æ–≤–∞—è –ø–µ–π–∑–∞–∂–Ω–∞—è –∂–∏–≤–æ–ø–∏—Å—å',
                        style: '–¶–∏—Ñ—Ä–æ–≤–æ–π –∏–º–ø—Ä–µ—Å—Å–∏–æ–Ω–∏–∑–º',
                        mood: '—Å–ø–æ–∫–æ–π–Ω–æ–µ –∏ –≤–µ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ',
                        details: '–æ–±—ä–µ–º–Ω—ã–µ –æ–±–ª–∞—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≥–æ—Ä–Ω–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞'
                    },
                    'NFT_1752915028.png': {
                        content: '–∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è —Å –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏',
                        visualElements: '–ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏–µ—Å—è –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∏–≥—É—Ä—ã, —Å–æ–∑–¥–∞—é—â–∏–µ —Å–ª–æ–∂–Ω—ã–π —É–∑–æ—Ä',
                        colorScheme: '–º–æ–Ω–æ—Ö—Ä–æ–º–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Å –≥—Ä–∞–¥–∞—Ü–∏—è–º–∏ –æ—Ç —á–µ—Ä–Ω–æ–≥–æ –∫ –±–µ–ª–æ–º—É —á–µ—Ä–µ–∑ —Å–µ—Ä—ã–µ —Ç–æ–Ω–∞',
                        technique: '–¶–∏—Ñ—Ä–æ–≤–∞—è –≥—Ä–∞—Ñ–∏–∫–∞',
                        style: '–ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–æ–Ω–∏–∑–º',
                        mood: '–º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ –∏ —Å–¥–µ—Ä–∂–∞–Ω–Ω–æ–µ',
                        details: '—á–µ—Ç–∫–∏–µ –ª–∏–Ω–∏–∏ –∏ –∫–æ–Ω—Ç—Ä–∞—Å—Ç—ã, —Å–æ–∑–¥–∞—é—â–∏–µ –æ–ø—Ç–∏—á–µ—Å–∫–∏–µ –∏–ª–ª—é–∑–∏–∏ –≥–ª—É–±–∏–Ω—ã'
                    },
                    'img_BQACAgQAAxkBAAN1aHuduGE0vgZHn42m1EsAATowzu18AAIhGgACZfHgU3QRd3E1YlOJNgQ.png': {
                        content: '–∫–æ—Å–º–∏—á–µ—Å–∫–∞—è —Å—Ü–µ–Ω–∞ —Å –ø–ª–∞–Ω–µ—Ç–∞–º–∏ –∏ –∑–≤–µ–∑–¥–Ω—ã–º–∏ —Å–∫–æ–ø–ª–µ–Ω–∏—è–º–∏',
                        visualElements: '–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–ª–∞–Ω–µ—Ç—ã —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ —Å—Ä–µ–¥–∏ –º–µ—Ä—Ü–∞—é—â–∏—Ö –∑–≤–µ–∑–¥',
                        colorScheme: '–≥–ª—É–±–æ–∫–∞—è –∫–æ—Å–º–∏—á–µ—Å–∫–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Å —Ç–µ–º–Ω–æ-—Å–∏–Ω–∏–º–∏, —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–º–∏ –∏ –∑–æ–ª–æ—Ç–∏—Å—Ç—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏',
                        technique: '–¶–∏—Ñ—Ä–æ–≤–∞—è –∫–æ—Å–º–∏—á–µ—Å–∫–∞—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è',
                        style: '–ù–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞ –∞—Ä—Ç',
                        mood: '—Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–µ',
                        details: '—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã –ø–ª–∞–Ω–µ—Ç –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã –∑–≤–µ–∑–¥–Ω–æ–≥–æ —Å–≤–µ—Ç–∞'
                    },
                    'img_BQACAgQAAxkBAAN3aHum1QHqUXmRuPAHVOpsnZNuxU8AAkIaAAJl8eBT8oa3OrOmPLw2BA.png': {
                        content: '–º–æ—Ä—Å–∫–æ–π –ø–µ–π–∑–∞–∂ —Å –≤–æ–ª–Ω–∞–º–∏ –∏ –∑–∞–∫–∞—Ç–Ω—ã–º –Ω–µ–±–æ–º',
                        visualElements: '–¥–∏–Ω–∞–º–∏—á–Ω—ã–µ –º–æ—Ä—Å–∫–∏–µ –≤–æ–ª–Ω—ã –ø–æ–¥ –∫—Ä–∞—Å–æ—á–Ω—ã–º –∑–∞–∫–∞—Ç–Ω—ã–º –Ω–µ–±–æ–º',
                        colorScheme: '—Ç–µ–ø–ª–∞—è –ø–∞–ª–∏—Ç—Ä–∞ –∑–∞–∫–∞—Ç–∞ —Å –æ—Ä–∞–Ω–∂–µ–≤—ã–º–∏, —Ä–æ–∑–æ–≤—ã–º–∏ –∏ –∑–æ–ª–æ—Ç–∏—Å—Ç—ã–º–∏ –æ—Ç—Ç–µ–Ω–∫–∞–º–∏',
                        technique: '–¶–∏—Ñ—Ä–æ–≤–∞—è –º–æ—Ä—Å–∫–∞—è –∂–∏–≤–æ–ø–∏—Å—å',
                        style: '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∞–ª–∏–∑–º',
                        mood: '—Ä–æ–º–∞–Ω—Ç–∏—á–Ω–æ–µ –∏ —É–º–∏—Ä–æ—Ç–≤–æ—Ä—è—é—â–µ–µ',
                        details: '—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –ø–µ—Ä–µ–¥–∞—á–∞ –¥–≤–∏–∂–µ–Ω–∏—è –≤–æ–¥—ã –∏ –æ–±–ª–∞—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ü–∏–π'
                    },
                    'img_BQACAgQAAxkBAAN5aHum-yYKYJhXztPhr0xMyxRx6scAAkMaAAJl8eBT5SD8UTS9QJk2BA.png': {
                        content: '–ª–µ—Å–Ω–∞—è —á–∞—â–∞ —Å –ø—Ä–æ–Ω–∏–∫–∞—é—â–∏–º–∏ –ª—É—á–∞–º–∏ —Å–æ–ª–Ω—Ü–∞',
                        visualElements: '–≤—ã—Å–æ–∫–∏–µ –¥–µ—Ä–µ–≤—å—è —Å–æ–∑–¥–∞—é—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ—Ä–∏–¥–æ—Ä —Å —Å–æ–ª–Ω–µ—á–Ω—ã–º–∏ –ª—É—á–∞–º–∏',
                        colorScheme: '–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–µ—Å–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Å –∑–µ–ª–µ–Ω—ã–º–∏ —Ç–æ–Ω–∞–º–∏ –∏ –∑–æ–ª–æ—Ç–∏—Å—Ç—ã–º–∏ —Å–≤–µ—Ç–æ–≤—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏',
                        technique: '–¶–∏—Ñ—Ä–æ–≤–∞—è –ø—Ä–∏—Ä–æ–¥–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
                        style: '–ù–∞—Ç—É—Ä–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞',
                        mood: '—Å–ø–æ–∫–æ–π–Ω–æ–µ –∏ –º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ',
                        details: '–∏–≥—Ä–∞ —Å–≤–µ—Ç–∞ –∏ —Ç–µ–Ω–∏ –º–µ–∂–¥—É –ª–∏—Å—Ç–≤–æ–π —Å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–µ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã'
                    }
                };
                
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
                if (imageDatabase[fileName]) {
                    const imageData = imageDatabase[fileName];
                    return {
                        type: determineTypeFromTechnique(imageData.technique),
                        technique: imageData.technique,
                        style: imageData.style,
                        content: imageData.content,
                        visualElements: imageData.visualElements,
                        colorScheme: imageData.colorScheme,
                        mood: imageData.mood,
                        details: imageData.details
                    };
                } else {
                    // –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                    return {
                        type: 'digital_art',
                        technique: '–¶–∏—Ñ—Ä–æ–≤–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ',
                        style: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ü–∏—Ñ—Ä–æ–≤–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è',
                        content: '—É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ',
                        visualElements: '—Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã',
                        colorScheme: '–≥–∞—Ä–º–æ–Ω–∏—á–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è',
                        mood: '–≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ–µ',
                        details: '–≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ü–∏—Ñ—Ä–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º'
                    };
                }
            }
            
            // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –ø–æ —Ç–µ—Ö–Ω–∏–∫–µ
            function determineTypeFromTechnique(technique) {
                if (technique.includes('–ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ò–ò')) return 'ai_generated';
                if (technique.includes('—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ') || technique.includes('–§–æ—Ç–æ')) return 'photo_art';
                if (technique.includes('–∂–∏–≤–æ–ø–∏—Å—å') || technique.includes('–≥—Ä–∞—Ñ–∏–∫–∞')) return 'digital_art';
                return 'mixed_media';
            }
            
            // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
            function createContentBasedDescription(imageData) {
                const descriptions = [
                    `–ü–µ—Ä–µ–¥ –Ω–∞–º–∏ ${imageData.content}, –≥–¥–µ ${imageData.visualElements}. ${imageData.colorScheme} —Å–æ–∑–¥–∞–µ—Ç –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è`,
                    `–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç ${imageData.content}. –ö–æ–º–ø–æ–∑–∏—Ü–∏—è –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è ${imageData.visualElements}, –∞ ${imageData.colorScheme} –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ—Ç ${imageData.mood} –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ`,
                    `–î–∞–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–∞–µ—Ç ${imageData.content}. –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ ${imageData.visualElements}, –≥–¥–µ ${imageData.colorScheme} –∏–≥—Ä–∞–µ—Ç –∫–ª—é—á–µ–≤—É—é —Ä–æ–ª—å –≤ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–∏`,
                    `–í —Ä–∞–±–æ—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ ${imageData.content}. –ú–∞—Å—Ç–µ—Ä—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ${imageData.visualElements} –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ —Å ${imageData.colorScheme} —Å–æ–∑–¥–∞–µ—Ç –≤–ø–µ—á–∞—Ç–ª—è—é—â–∏–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç`
                ];
                
                return descriptions[Math.floor(Math.random() * descriptions.length)];
            }
            
            function createTechnicalAnalysis(imageData) {
                const technicalDescriptions = [
                    `–¢–µ—Ö–Ω–∏–∫–∞ ${imageData.technique} –ø–æ–∑–≤–æ–ª–∏–ª–∞ –º–∞—Å—Ç–µ—Ä—Å–∫–∏ –ø–µ—Ä–µ–¥–∞—Ç—å ${imageData.details}, —Å–æ–∑–¥–∞–≤–∞—è –≥–ª—É–±–æ–∫–æ–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ`,
                    `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ${imageData.technique} –æ–±–µ—Å–ø–µ—á–∏–ª–æ –≤—ã—Å–æ–∫—É—é –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é, –≥–¥–µ ${imageData.details} –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è`,
                    `–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ ${imageData.technique} –¥–∞–ª–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å ${imageData.details}, —á—Ç–æ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ü–∏—Ñ—Ä–æ–≤–æ–º—É –∏—Å–∫—É—Å—Å—Ç–≤—É`,
                    `–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –≤ –æ–±–ª–∞—Å—Ç–∏ ${imageData.technique} –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è –≤ —Ç–æ–º, –∫–∞–∫ ${imageData.details}, —Å–æ–∑–¥–∞–≤–∞—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ`
                ];
                
                return technicalDescriptions[Math.floor(Math.random() * technicalDescriptions.length)];
            }
            
            function createArtisticMessage(imageData) {
                const messages = [
                    `–ê–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ ${imageData.content} —Å—Ç—Ä–µ–º–∏—Ç—Å—è –ø–µ—Ä–µ–¥–∞—Ç—å ${imageData.mood} –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –º–∏—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É—è –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ ${imageData.technique.toLowerCase()}`,
                    `–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å—Å–ª–µ–¥—É–µ—Ç –∫—Ä–∞—Å–æ—Ç—É ${imageData.content}, –≥–¥–µ ${imageData.style.toLowerCase()} —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å—Ä–µ–¥—Å—Ç–≤–æ–º –≤—ã—Ä–∞–∂–µ–Ω–∏—è ${imageData.mood} —ç–º–æ—Ü–∏–π`,
                    `–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ ${imageData.content}, –∫–æ—Ç–æ—Ä–æ–µ –≤ —Å—Ç–∏–ª–µ ${imageData.style.toLowerCase()} –ø–µ—Ä–µ–¥–∞–µ—Ç ${imageData.mood} –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ`,
                    `–ß–µ—Ä–µ–∑ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é ${imageData.content} –∞–≤—Ç–æ—Ä —Å–æ–∑–¥–∞–µ—Ç ${imageData.mood} —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–µ, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–æ–µ –¥–ª—è ${imageData.style.toLowerCase()}`
                ];
                
                return messages[Math.floor(Math.random() * messages.length)];
            }
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ  
            const contentDescription = createContentBasedDescription(analysisResult);
            const technicalDescription = createTechnicalAnalysis(analysisResult);
            const artisticMessage = createArtisticMessage(analysisResult);
            
            // –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω–æ–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
            const personalizedDescription = `${contentDescription}. ${artisticMessage}. ${technicalDescription}.`;
            
            // –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
            const emotionalResponses = {
                '–¥–∏–Ω–∞–º–∏—á–Ω–æ–µ –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω–æ–µ': '–ø–µ—Ä–µ–¥–∞–µ—Ç –º–æ—â–Ω—É—é —ç–Ω–µ—Ä–≥–∏—é –∏ –¥–≤–∏–∂–µ–Ω–∏–µ, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—è –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
                '—Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ–µ': '–ø–æ–≥—Ä—É–∂–∞–µ—Ç –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –±—É–¥—É—â–µ–≥–æ, –≥–¥–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–æ —Å–ª–∏–≤–∞—é—Ç—Å—è –≤–æ–µ–¥–∏–Ω–æ',
                '—Å–æ–∑–µ—Ä—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∏ –∏–Ω—Ç–∏–º–Ω–æ–µ': '—Å–æ–∑–¥–∞–µ—Ç –æ—â—É—â–µ–Ω–∏–µ –≥–ª—É–±–æ–∫–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏ –∏ —É–º–∏—Ä–æ—Ç–≤–æ—Ä–µ–Ω–∏—è',
                '—Å–ø–æ–∫–æ–π–Ω–æ–µ –∏ –≤–µ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ': '–≤—ã–∑—ã–≤–∞–µ—Ç —á—É–≤—Å—Ç–≤–æ –ø–æ–∫–æ—è –∏ –≤–æ—Å—Ö–∏—â–µ–Ω–∏—è –ø—Ä–∏—Ä–æ–¥–Ω–æ–π –∫—Ä–∞—Å–æ—Ç–æ–π',
                '–º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ –∏ —Å–¥–µ—Ä–∂–∞–Ω–Ω–æ–µ': '–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–∏–ª—É –ø—Ä–æ—Å—Ç–æ—Ç—ã –∏ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º',
                '—Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–µ': '–ø—Ä–æ–±—É–∂–¥–∞–µ—Ç –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ –∏ –∂–µ–ª–∞–Ω–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –Ω–µ–∏–∑–≤–µ–¥–∞–Ω–Ω–æ–µ',
                '—Ä–æ–º–∞–Ω—Ç–∏—á–Ω–æ–µ –∏ —É–º–∏—Ä–æ—Ç–≤–æ—Ä—è—é—â–µ–µ': '–Ω–∞–ø–æ–ª–Ω—è–µ—Ç —Å–µ—Ä–¥—Ü–µ —Ç–µ–ø–ª–æ–º –∏ —Å–æ–∑–¥–∞–µ—Ç –æ—â—É—â–µ–Ω–∏–µ –ø–æ–∫–æ—è',
                '—Å–ø–æ–∫–æ–π–Ω–æ–µ –∏ –º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ': '—Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω–∏—é –∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—é'
            };
            
            const emotionalImpact = emotionalResponses[analysisResult.mood] || '—Å–æ–∑–¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ';
            
            // –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
            const specializedAttributes = [
                { trait_type: "–¢–µ—Ö–Ω–∏–∫–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è", value: analysisResult.technique },
                { trait_type: "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å", value: analysisResult.style },
                { trait_type: "–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", value: analysisResult.content },
                { trait_type: "–í–∏–∑—É–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã", value: analysisResult.visualElements },
                { trait_type: "–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞", value: analysisResult.colorScheme },
                { trait_type: "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", value: analysisResult.mood },
                { trait_type: "–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è", value: analysisResult.details }
            ];
            
            // –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–∏—Ç—É–ª—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ—Ö–Ω–∏–∫–∏
            const personalizedTitles = {
                '–ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ò–ò –∏—Å–∫—É—Å—Å—Ç–≤–æ': [
                    "–ò–ò –í–∏–¥–µ–Ω–∏–µ", "–ê–ª–≥–æ—Ä–∏—Ç–º–∏—á–µ—Å–∫–∞—è –ü–æ—ç–∑–∏—è", "–¶–∏—Ñ—Ä–æ–≤–æ–π –ì–µ–Ω–µ–∑–∏—Å", "–ú–∞—à–∏–Ω–Ω—ã–µ –ì—Ä–µ–∑—ã", "–°–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∞—è –ö—Ä–∞—Å–æ—Ç–∞"
                ],
                '–¶–∏—Ñ—Ä–æ–≤–∞—è –≥—Ä–∞—Ñ–∏–∫–∞': [
                    "–¶–∏—Ñ—Ä–æ–≤–∞—è –≠–ª–µ–≥–∏—è", "–í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –°–∏–º—Ñ–æ–Ω–∏—è", "–ü–∏–∫—Å–µ–ª—å–Ω–æ–µ –°–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ", "–¶–∏—Ñ—Ä–æ–≤–∞—è –û–¥–∏—Å—Å–µ—è", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ú—É–∑–∞"
                ],
                '–¶–∏—Ñ—Ä–æ–≤–∞—è —Ñ–æ—Ç–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞': [
                    "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –ê–ª—Ö–∏–º–∏—è", "–í–∏–∑—É–∞–ª—å–Ω–∞—è –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è", "–¶–∏—Ñ—Ä–æ–≤–∞—è –ú–µ—Ç–∞–º–æ—Ä—Ñ–æ–∑–∞", "–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –†–µ–∞–ª—å–Ω–æ—Å—Ç—å", "–§–æ—Ç–æ–∞—Ä—Ç –í–∏–¥–µ–Ω–∏–µ"
                ],
                '–°–º–µ—à–∞–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞': [
                    "–ú—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω–∞—è –§–∞–Ω—Ç–∞–∑–∏—è", "–≠–∫–ª–µ–∫—Ç–∏—á–µ—Å–∫–æ–µ –¢–≤–æ—Ä–µ–Ω–∏–µ", "–ì–∏–±—Ä–∏–¥–Ω–æ–µ –ò—Å–∫—É—Å—Å—Ç–≤–æ", "–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –§–æ—Ä–º–∞", "–°–∏–Ω—Ç–µ–∑ –°—Ç–∏–ª–µ–π"
                ]
            };
            
            const titleSet = personalizedTitles[analysisResult.technique] || personalizedTitles['–¶–∏—Ñ—Ä–æ–≤–∞—è –≥—Ä–∞—Ñ–∏–∫–∞'];
            const personalizedTitle = titleSet[Math.floor(Math.random() * titleSet.length)] + " #" + Math.floor(Math.random() * 10000);
            
            // –û–±—â–∏–µ –∞—Ç—Ä–∏–±—É—Ç—ã
            const commonAttributes = [
                { trait_type: "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞", value: "278 –ö–ë" },
                { trait_type: "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è", value: new Date().toLocaleDateString('ru-RU') },
                { trait_type: "–§–æ—Ä–º–∞—Ç", value: "–¶–∏—Ñ—Ä–æ–≤–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ" },
                { trait_type: "–ö–æ–ª–ª–µ–∫—Ü–∏—è", value: "NFT Collection 2025" },
                { trait_type: "–≠–ø–æ—Ö–∞", value: "–¶–∏—Ñ—Ä–æ–≤–æ–π —Ä–µ–Ω–µ—Å—Å–∞–Ω—Å" },
                { trait_type: "–ö–∞—á–µ—Å—Ç–≤–æ", value: "–ü—Ä–µ–º–∏—É–º" },
                { trait_type: "–†–µ–¥–∫–æ—Å—Ç—å", value: "–£–Ω–∏–∫–∞–ª—å–Ω—ã–π" }
            ];
            
            // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏ –æ–±—â–∏–µ –∞—Ç—Ä–∏–±—É—Ç—ã
            const allAttributes = [...specializedAttributes, ...commonAttributes];
            
            const aiResult = {
                title: personalizedTitle,
                description: personalizedDescription,
                visualAnalysis: contentDescription,
                artisticMessage: artisticMessage,
                emotionalImpact: emotionalImpact,
                technicalNote: technicalDescription,
                attributes: allAttributes,
                creator: "Digital Visionary Artist",
                timestamp: new Date().toISOString(),
                id: "NFT_" + Date.now(),
                analysis: {
                    composition: `${analysisResult.technique} —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ ${analysisResult.content}`,
                    colorPalette: analysisResult.colorScheme,
                    technique: analysisResult.technique,
                    inspiration: `${analysisResult.style} –≤ ${analysisResult.mood} –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏`
                },
                imageInfo: {
                    realContent: analysisResult.content,
                    visualElements: analysisResult.visualElements,
                    colorScheme: analysisResult.colorScheme,
                    style: analysisResult.style,
                    mood: analysisResult.mood,
                    technique: analysisResult.technique,
                    details: analysisResult.details,
                    source: analysisResult.source || 'Local Database'
                }
            };
            
            console.log('‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ:', aiResult.title);
            console.log('üé® –°–æ–¥–µ—Ä–∂–∏–º–æ–µ:', analysisResult.content);
            console.log('üîß –¢–µ—Ö–Ω–∏–∫–∞:', analysisResult.technique);
            console.log('üé≠ –°—Ç–∏–ª—å:', analysisResult.style);
            console.log('üí≠ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:', analysisResult.mood);
            console.log('üé® –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞:', analysisResult.colorScheme);
            console.log('üìä –ê—Ç—Ä–∏–±—É—Ç—ã:', aiResult.attributes.length, '—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫');
            console.log('üåü –ò—Å—Ç–æ—á–Ω–∏–∫ –∞–Ω–∞–ª–∏–∑–∞:', analysisResult.source || 'Local Database');
            console.log('üåü –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω');
            
            res.writeHead(200, {'Content-Type': 'application/json; charset=utf-8'});
            res.end(JSON.stringify(aiResult, null, 2));
        });
        return;
    }
    
    res.writeHead(404, {'Content-Type': 'text/plain; charset=utf-8'});
    res.end('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
});

const PORT = 3005;
server.listen(PORT, () => {
    console.log('üéØ NFT –ú–∞—Å—Ç–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:' + PORT);
    console.log('üìù –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å–æ–∑–¥–∞–Ω–∏—è NFT –∫–æ–ª–ª–µ–∫—Ü–∏–∏');
    console.log('ü§ñ –ò–ò –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ–ø–∏—Å–∞–Ω–∏–π –∞–∫—Ç–∏–≤–µ–Ω');
    console.log('üìä –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö ERC-721');
    console.log('üåê –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å GitHub');
    console.log('‚ú® –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è NFT');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
});

module.exports = server;
